{
    "openapi": "3.0.0",
    "info": {
        "title": "The Financial Express API",
        "contact": {
            "name": "Eliyas Hossain",
            "url": "https://batterylowinteractive.com",
            "email": "eliyas.batterylowinteractive@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/admin",
            "description": "Admin API base url"
        }
    ],
    "paths": {
        "/ads/pages": {
            "get": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get ads pages",
                "description": "Get ads pages",
                "operationId": "adsPage",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/ads/sections/{page}": {
            "get": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get ads sections by page",
                "description": "Get ads sections by page",
                "operationId": "adsSection",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "home"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/ads/positions/{page}/{section}": {
            "get": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get ads position by page",
                "description": "Get ads positions by page and section",
                "operationId": "adsPosition",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "home"
                    },
                    {
                        "name": "section",
                        "in": "path",
                        "description": "Section name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "hero"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FilterResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/ads/providers": {
            "get": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get ads providers",
                "description": "Get ads providers",
                "operationId": "adsProvider",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/FilterResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/ads/advertisement": {
            "get": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get advertisement",
                "description": "Get advertisement with paginate",
                "operationId": "adsIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Advertisement"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Store advertisement",
                "description": "Store advertisement",
                "operationId": "adsStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Advertisement"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "adsId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/ads/advertisement/{id}": {
            "get": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Get advertisement",
                "description": "Get advertisement",
                "operationId": "adsShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Advertisement"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Delete advertisement",
                "description": "Delete advertisement",
                "operationId": "adsDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Advertisement"
                ],
                "summary": "Update advertisement",
                "description": "Update advertisement",
                "operationId": "adsUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Advertisement"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/revenue/{page}": {
            "get": {
                "tags": [
                    "AdvertisementApi"
                ],
                "summary": "Get ads by page",
                "description": "Get ads by page",
                "operationId": "revenueHomeAds",
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "home"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/revenue/global": {
            "get": {
                "tags": [
                    "AdvertisementApi"
                ],
                "summary": "Get ads by page",
                "description": "Get ads by page",
                "operationId": "revenueGlobalAds",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/bangla/home": {
            "get": {
                "tags": [
                    "BanglaCategoryApi"
                ],
                "summary": "Get posts by bangla category",
                "description": "Get posts by bangla category",
                "operationId": "banglaCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/bangla/more": {
            "get": {
                "tags": [
                    "BanglaCategoryApi"
                ],
                "summary": "Get posts by bangla more",
                "description": "Get posts by bangla more by paginate",
                "operationId": "banglaCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/economy/home": {
            "get": {
                "tags": [
                    "EconomyCategoryApi"
                ],
                "summary": "Get posts by economy category",
                "description": "Get posts by economy category",
                "operationId": "economyCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/economy/bangladesh": {
            "get": {
                "tags": [
                    "EconomyCategoryApi"
                ],
                "summary": "Get posts by economy bangladesh category",
                "description": "Get posts by economy bangladesh category",
                "operationId": "economyBangladeshCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/economy/global": {
            "get": {
                "tags": [
                    "EconomyCategoryApi"
                ],
                "summary": "Get posts by economy global category",
                "description": "Get posts by economy global category",
                "operationId": "economyGlobalCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/economy/more": {
            "get": {
                "tags": [
                    "EconomyCategoryApi"
                ],
                "summary": "Get posts by economy more",
                "description": "Get posts by economy more by paginate",
                "operationId": "economyCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/editorial/home": {
            "get": {
                "tags": [
                    "EditorialCategoryApi"
                ],
                "summary": "Get posts by editorial category",
                "description": "Get posts by editorial category",
                "operationId": "editorialCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/editorial/more": {
            "get": {
                "tags": [
                    "EditorialCategoryApi"
                ],
                "summary": "Get posts by editorial more",
                "description": "Get posts by editorial more by paginate",
                "operationId": "editorialCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/education/home": {
            "get": {
                "tags": [
                    "EducationCategoryApi"
                ],
                "summary": "Get posts by education category",
                "description": "Get posts by education category",
                "operationId": "educationCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/education/article": {
            "get": {
                "tags": [
                    "EducationCategoryApi"
                ],
                "summary": "Get posts by education article category",
                "description": "Get posts by education article category",
                "operationId": "educationArticleCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/education/more": {
            "get": {
                "tags": [
                    "EducationCategoryApi"
                ],
                "summary": "Get posts by education more",
                "description": "Get posts by education more by paginate",
                "operationId": "educationCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/entertainment/home": {
            "get": {
                "tags": [
                    "EntertainmentCategoryApi"
                ],
                "summary": "Get posts by entertainment category",
                "description": "Get posts by entertainment category",
                "operationId": "entertainmentCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/entertainment/more": {
            "get": {
                "tags": [
                    "EntertainmentCategoryApi"
                ],
                "summary": "Get posts by entertainment more",
                "description": "Get posts by entertainment more by paginate",
                "operationId": "entertainmentCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/environment/home": {
            "get": {
                "tags": [
                    "EnvironmentCategoryApi"
                ],
                "summary": "Get posts by environment category",
                "description": "Get posts by environment category",
                "operationId": "environmentCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/environment/more": {
            "get": {
                "tags": [
                    "EnvironmentCategoryApi"
                ],
                "summary": "Get posts by environment more",
                "description": "Get posts by environment more by paginate",
                "operationId": "environmentCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/golden-jubilee-of-independence/home": {
            "get": {
                "tags": [
                    "GoldenJubileeOfIndependenceCategoryApi"
                ],
                "summary": "Get posts by Golden Jubilee Of Independence category",
                "description": "Get posts by Golden Jubilee Of Independence category",
                "operationId": "GoldenJubileeOfIndependenceCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/golden-jubilee-of-independence/more": {
            "get": {
                "tags": [
                    "GoldenJubileeOfIndependenceCategoryApi"
                ],
                "summary": "Get posts by Golden Jubilee Of Independence more",
                "description": "Get posts by Golden Jubilee Of Independence more by paginate",
                "operationId": "GoldenJubileeOfIndependenceCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/health/home": {
            "get": {
                "tags": [
                    "HealthCategoryApi"
                ],
                "summary": "Get posts by health category",
                "description": "Get posts by health category",
                "operationId": "healthCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/health/more": {
            "get": {
                "tags": [
                    "HealthCategoryApi"
                ],
                "summary": "Get posts by health more",
                "description": "Get posts by health more by paginate",
                "operationId": "healthCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/home": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle category",
                "description": "Get posts by lifestyle category",
                "operationId": "lifestyleCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/entertainment": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle entertainment category",
                "description": "Get posts by lifestyle entertainment category",
                "operationId": "lifestyleCategoryEntertainmentApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/living": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle living category",
                "description": "Get posts by lifestyle living category",
                "operationId": "lifestyleCategoryLivingApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/food": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle food category",
                "description": "Get posts by lifestyle food category",
                "operationId": "lifestyleCategoryFoodApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/gallery": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle gallery category",
                "description": "Get posts by lifestyle gallery category",
                "operationId": "lifestyleCategoryGalleryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/culture": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle culture category",
                "description": "Get posts by lifestyle culture category",
                "operationId": "lifestyleCategoryCultureApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/others": {
            "get": {
                "tags": [
                    "LifestyleCategoryApi"
                ],
                "summary": "Get posts by lifestyle others category",
                "description": "Get posts by lifestyle others category",
                "operationId": "lifestyleCategoryOtherseApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/lifestyle/more": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by lifestyle more",
                "description": "Get posts by lifestyle more by paginate",
                "operationId": "LifestyleCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/national/home": {
            "get": {
                "tags": [
                    "NationalCategoryApi"
                ],
                "summary": "Get posts by national category",
                "description": "Get posts by national category",
                "operationId": "nationalCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/national/politics": {
            "get": {
                "tags": [
                    "NationalCategoryApi"
                ],
                "summary": "Get posts by national politics category",
                "description": "Get posts by national politics category",
                "operationId": "nationalPoliticsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/national/country": {
            "get": {
                "tags": [
                    "NationalCategoryApi"
                ],
                "summary": "Get posts by national country category",
                "description": "Get posts by national country category",
                "operationId": "nationalCountryCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/national/crime": {
            "get": {
                "tags": [
                    "NationalCategoryApi"
                ],
                "summary": "Get posts by national crime category",
                "description": "Get posts by national crime category",
                "operationId": "nationalCrimeCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/national/more": {
            "get": {
                "tags": [
                    "NationalCategoryApi"
                ],
                "summary": "Get posts by national more",
                "description": "Get posts by national more by paginate",
                "operationId": "nationalCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/home": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal-finance category",
                "description": "Get posts by personal-finance category",
                "operationId": "personalFinanceCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/tax": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance tax category",
                "description": "Get posts by personal finance tax category",
                "operationId": "personalFinanceTaxCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/mutual-funds": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance mutual-funds category",
                "description": "Get posts by personal finance mutual-funds category",
                "operationId": "personalFinanceMutualFundsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/invest": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance invest category",
                "description": "Get posts by personal finance invest category",
                "operationId": "personalFinanceInvestCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/save": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance save category",
                "description": "Get posts by personal finance save category",
                "operationId": "personalFinanceSaveCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/news": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance news category",
                "description": "Get posts by personal finance news category",
                "operationId": "personalFinanceNewsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/spend": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance spend category",
                "description": "Get posts by personal finance spend category",
                "operationId": "personalFinanceSpendCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/calculators": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal finance calculators category",
                "description": "Get posts by personal finance calculators category",
                "operationId": "personalFinanceCalculatorsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/personal-finance/more": {
            "get": {
                "tags": [
                    "PersonalFinanceCategoryApi"
                ],
                "summary": "Get posts by personal-finance more",
                "description": "Get posts by personal-finance more by paginate",
                "operationId": "personalFinanceCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sci-tech/home": {
            "get": {
                "tags": [
                    "SciTechCategoryApi"
                ],
                "summary": "Get posts by sci-tech category",
                "description": "Get posts by sci-tech category",
                "operationId": "scitechCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sci-tech/more": {
            "get": {
                "tags": [
                    "SciTechCategoryApi"
                ],
                "summary": "Get posts by sci-tech more",
                "description": "Get posts by sci-tech more by paginate",
                "operationId": "scitechCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/special-issues/home": {
            "get": {
                "tags": [
                    "SpecialIssuesCategoryApi"
                ],
                "summary": "Get posts by special-issues category",
                "description": "Get posts by special-issues category",
                "operationId": "specialIssuesCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/special-issues/budget-2022": {
            "get": {
                "tags": [
                    "SpecialIssuesCategoryApi"
                ],
                "summary": "Get posts by special-issues budget-2022 category",
                "description": "Get posts by special-issues budget-2022 category",
                "operationId": "specialIssuesBudget2022CategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/special-issues/important-days": {
            "get": {
                "tags": [
                    "SpecialIssuesCategoryApi"
                ],
                "summary": "Get posts by special-issues important-days category",
                "description": "Get posts by special-issues important-days category",
                "operationId": "specialIssuesImportantDaysCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/special-issues/more": {
            "get": {
                "tags": [
                    "SpecialIssuesCategoryApi"
                ],
                "summary": "Get posts by special-issues more",
                "description": "Get posts by special-issues more by paginate",
                "operationId": "specialIssuesCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sports/home": {
            "get": {
                "tags": [
                    "SportsCategoryApi"
                ],
                "summary": "Get posts by sports category",
                "description": "Get posts by sports category",
                "operationId": "sportsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sports/cricket": {
            "get": {
                "tags": [
                    "SportsCategoryApi"
                ],
                "summary": "Get posts by sports category",
                "description": "Get posts by sports category",
                "operationId": "sportsCategoryApiCricket",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sports/football": {
            "get": {
                "tags": [
                    "SportsCategoryApi"
                ],
                "summary": "Get posts by sports category",
                "description": "Get posts by sports category",
                "operationId": "sportsCategoryApiFootball",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sports/more": {
            "get": {
                "tags": [
                    "SportsCategoryApi"
                ],
                "summary": "Get posts by sports more",
                "description": "Get posts by sports more category",
                "operationId": "sportsCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/sports/slider": {
            "get": {
                "tags": [
                    "SportsCategoryApi"
                ],
                "summary": "Get slider images by category",
                "description": "Get slider images by category",
                "operationId": "sportsCategorySliderApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/stock/home": {
            "get": {
                "tags": [
                    "StockCategoryApi"
                ],
                "summary": "Get posts by stock category",
                "description": "Get posts by stock category",
                "operationId": "stockCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/stock/bangladesh": {
            "get": {
                "tags": [
                    "StockCategoryApi"
                ],
                "summary": "Get posts by stock bangladesh category",
                "description": "Get posts by stock bangladesh category",
                "operationId": "stockBangladeshCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/stock/global": {
            "get": {
                "tags": [
                    "StockCategoryApi"
                ],
                "summary": "Get posts by stock global category",
                "description": "Get posts by stock global category",
                "operationId": "stockGlobalCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/stock/more": {
            "get": {
                "tags": [
                    "StockCategoryApi"
                ],
                "summary": "Get posts by stock more",
                "description": "Get posts by stock more by paginate",
                "operationId": "stockCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/trade/home": {
            "get": {
                "tags": [
                    "TradeCategoryApi"
                ],
                "summary": "Get posts by trade category",
                "description": "Get posts by trade category",
                "operationId": "tradeCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/trade/more": {
            "get": {
                "tags": [
                    "TradeCategoryApi"
                ],
                "summary": "Get posts by trade more",
                "description": "Get posts by trade more by paginate",
                "operationId": "tradeCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/home": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views category",
                "description": "Get posts by views category",
                "operationId": "viewsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/views": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views views category",
                "description": "Get posts by views views category",
                "operationId": "viewsViewsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/reviews": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views reviews category",
                "description": "Get posts by views reviews category",
                "operationId": "viewsReviewsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/opinions": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views opinions category",
                "description": "Get posts by views opinions category",
                "operationId": "viewsOpinionsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/columns": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views columns category",
                "description": "Get posts by views columns category",
                "operationId": "viewsColumnsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/analysis": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views analysis category",
                "description": "Get posts by views analysis category",
                "operationId": "viewsAnalysisCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/letters": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views letters category",
                "description": "Get posts by views letters category",
                "operationId": "viewsLettersCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/economic-trends-and-insights": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views economic trends and insights category",
                "description": "Get posts by views economic trends and insights category",
                "operationId": "viewsEconomicTrendsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/more": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views more",
                "description": "Get posts by views more by paginate",
                "operationId": "viewsCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/views/sub-more/{category}/{category_id}": {
            "get": {
                "tags": [
                    "ViewsCategoryApi"
                ],
                "summary": "Get posts by views subcategory more",
                "description": "Get posts by views more by paginate",
                "operationId": "viewsSubCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Category key",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "reviews"
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Category Id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/world/home": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by world category",
                "description": "Get posts by world category",
                "operationId": "worldCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/world/asia": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by world asia category",
                "description": "Get posts by world asia category",
                "operationId": "worldAsiaCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/world/america": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by world america category",
                "description": "Get posts by world america category",
                "operationId": "worldAmericaCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/world/europe": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by world europe category",
                "description": "Get posts by world europe category",
                "operationId": "worldEuropeCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/world/africa": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by world africa category",
                "description": "Get posts by world africa category",
                "operationId": "worldAfricaCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/world/more": {
            "get": {
                "tags": [
                    "WorldCategoryApi"
                ],
                "summary": "Get posts by world more",
                "description": "Get posts by world more by paginate",
                "operationId": "worldCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/youth-and-entrepreneurship/home": {
            "get": {
                "tags": [
                    "YouthAndEntrepreneurshipCategoryApi"
                ],
                "summary": "Get posts by youth and entrepreneurship category",
                "description": "Get posts by youth and entrepreneurship category",
                "operationId": "YouthAndEntrepreneurshipCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/youth-and-entrepreneurship/youth": {
            "get": {
                "tags": [
                    "YouthAndEntrepreneurshipCategoryApi"
                ],
                "summary": "Get posts by youth and entrepreneurship youth category",
                "description": "Get posts by youth and entrepreneurship youth category",
                "operationId": "YouthAndEntrepreneurshipYouthCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/youth-and-entrepreneurship/entrepreneurship": {
            "get": {
                "tags": [
                    "YouthAndEntrepreneurshipCategoryApi"
                ],
                "summary": "Get posts by youth and entrepreneurship entrepreneurship category",
                "description": "Get posts by youth and entrepreneurship entrepreneurship category",
                "operationId": "YouthAndEntrepreneurshipentrepreneurshipCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/youth-and-entrepreneurship/startups": {
            "get": {
                "tags": [
                    "YouthAndEntrepreneurshipCategoryApi"
                ],
                "summary": "Get posts by youth and entrepreneurship startups category",
                "description": "Get posts by youth and entrepreneurship startups category",
                "operationId": "YouthAndEntrepreneurshipStartupsCategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/category/youth-and-entrepreneurship/more": {
            "get": {
                "tags": [
                    "YouthAndEntrepreneurshipCategoryApi"
                ],
                "summary": "Get posts by youth and entrepreneurship more",
                "description": "Get posts by youth and entrepreneurship more by paginate",
                "operationId": "YouthAndEntrepreneurshipCategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/subcategory/home": {
            "get": {
                "tags": [
                    "SubCategoryApi"
                ],
                "summary": "Get posts by subcategory",
                "description": "Get posts by subcategory",
                "operationId": "subcategoryApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "Category slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "economy/bangladesh"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/subcategory/more": {
            "get": {
                "tags": [
                    "SubCategoryApi"
                ],
                "summary": "Get posts by subcategory with paginate",
                "description": "Get posts by subcategory with paginate",
                "operationId": "subcategoryMoreApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "Category slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "economy/bangladesh"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/filter/reporters": {
            "get": {
                "tags": [
                    "SearchApi"
                ],
                "summary": "Get reporters for search filter",
                "description": "Get reporters for search filter",
                "operationId": "searchRepoterApi",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FilterResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/filter/categories": {
            "get": {
                "tags": [
                    "SearchApi"
                ],
                "summary": "Get categories for search filter",
                "description": "Get categories for search filter",
                "operationId": "searchCategoryApi",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CategoryTreeResponse"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/latest-post": {
            "get": {
                "tags": [
                    "LatestPostApi"
                ],
                "summary": "Get latest post",
                "description": "Get latest posts",
                "operationId": "latestPostApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LatestPostApi"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/live-media/home": {
            "get": {
                "tags": [
                    "LiveMediaApi"
                ],
                "summary": "Get live media",
                "description": "Get live media for home page",
                "operationId": "liveMediaApiHome",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LiveMediaApi"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/live-media/featured": {
            "get": {
                "tags": [
                    "LiveMediaApi"
                ],
                "summary": "Get featured live media",
                "description": "Get featured live media for home page",
                "operationId": "liveMediaApiFeatured",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LiveMediaApi"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/live-media/get": {
            "get": {
                "tags": [
                    "LiveMediaApi"
                ],
                "summary": "Get live media with paginate",
                "description": "Get live media with paginate",
                "operationId": "liveMediaApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LiveMediaApi"
                                            }
                                        },
                                        "nextPageUrl": {
                                            "type": "string"
                                        },
                                        "prevPageUrl": {
                                            "type": "string"
                                        },
                                        "perPage": {
                                            "type": "integer"
                                        },
                                        "hasPages": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/post/{type}": {
            "get": {
                "tags": [
                    "PostApi"
                ],
                "summary": "Get posts",
                "description": "Get posts",
                "operationId": "postApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Post type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "column1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/post/{slug}": {
            "get": {
                "tags": [
                    "PostApi"
                ],
                "summary": "Get post",
                "description": "Get post",
                "operationId": "postApiShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Post slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/posts": {
            "get": {
                "tags": [
                    "PostApi"
                ],
                "summary": "Get all posts",
                "description": "Get all posts by paginate",
                "operationId": "postsApi",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/post-more/{slug}": {
            "get": {
                "tags": [
                    "PostApi"
                ],
                "summary": "Get post more",
                "description": "Get post more",
                "operationId": "postMoreApiShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Post slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/post-most-read": {
            "get": {
                "tags": [
                    "PostApi"
                ],
                "summary": "Get post most read",
                "description": "Get post most read",
                "operationId": "postMostReadApiShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-economy": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by economy category",
                "description": "Get posts by economy category",
                "operationId": "postApiCategoryIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-sports": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by sports category",
                "description": "Get posts by sports category",
                "operationId": "postApiSportsIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-national": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by national category",
                "description": "Get posts by national category",
                "operationId": "postApiNationalIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-trade": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by trade category",
                "description": "Get posts by trade category",
                "operationId": "postApiTradeIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-stock": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by stock category",
                "description": "Get posts by stock category",
                "operationId": "postApiStockIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/most-read": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by views count",
                "description": "Get posts by views count",
                "operationId": "postApiMostReadkIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-world": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by world category",
                "description": "Get posts by world category",
                "operationId": "postApiWorldIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-lifestyle": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by lifestyle category",
                "description": "Get posts by lifestyle category",
                "operationId": "postApilifestyleIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-education": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by education category",
                "description": "Get posts by education category",
                "operationId": "postApiEducationIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-more": {
            "get": {
                "tags": [
                    "PostMoreApi"
                ],
                "summary": "Get posts by category more",
                "description": "Get posts by category more",
                "operationId": "postApiMoreIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-youth-and-entrepreneurship": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by youth-and-entrepreneurship category",
                "description": "Get posts by youth-and-entrepreneurship category",
                "operationId": "postApiYouthAndEntrepreneurshipIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-personal-finance": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by personal-finance category",
                "description": "Get posts by personal-finance category",
                "operationId": "postApiPersonalFinanceIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/home/category-bangla": {
            "get": {
                "tags": [
                    "PostCategoryApi"
                ],
                "summary": "Get posts by bangla category",
                "description": "Get posts by bangla category",
                "operationId": "postApiBanglaIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/post-search": {
            "get": {
                "tags": [
                    "SearchApi"
                ],
                "summary": "Search post",
                "description": "Get posts by search",
                "operationId": "searchPostApi",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    },
                    {
                        "name": "reporter",
                        "in": "query",
                        "description": "Filter by reporter",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Filter by categories (multiple id sepated by comma",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter by start date (unix time)",
                        "schema": {
                            "type": "date-time",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter by end date (unix time)",
                        "schema": {
                            "type": "date-time",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc",
                                "relevant"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/reporter/{username}": {
            "get": {
                "tags": [
                    "ReporterApi"
                ],
                "summary": "Get Reporter",
                "description": "Get Reporter",
                "operationId": "reporterApiShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Reporter username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/reporter/{username}/more": {
            "get": {
                "tags": [
                    "ReporterApi"
                ],
                "summary": "Get Reporter more post",
                "description": "Get Reporter more post",
                "operationId": "reporterMoreApiShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Reporter username",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PostApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/api/{locale}/slider": {
            "get": {
                "tags": [
                    "SliderApi"
                ],
                "summary": "Get sliders",
                "description": "Get sliders",
                "operationId": "sliderApiIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SliderApi"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "servers": [
                    {
                        "url": "/",
                        "description": "API base url"
                    }
                ]
            }
        },
        "/menu": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Get admin panel menu.",
                "description": "Get admin panel sidebar menu.",
                "operationId": "menuIndex",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MenuResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Menu"
                ],
                "summary": "Create admin panel menu.",
                "description": "Create admin panel sidebar menu.",
                "operationId": "menuStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "roles"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Users"
                                    },
                                    "link": {
                                        "description": "Required to create a child menu",
                                        "type": "string",
                                        "format": "string",
                                        "example": "/user/users"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "mdi-users"
                                    },
                                    "parent_id": {
                                        "description": "Required to create a child menu",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "1"
                                    },
                                    "status": {
                                        "description": "check, if menu is active or inactive",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "1"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/menu/{menu}": {
            "delete": {
                "tags": [
                    "Menu"
                ],
                "summary": "Delete admin panel menu",
                "description": "Delete admin panel menu",
                "operationId": "menuDelete",
                "parameters": [
                    {
                        "name": "menu",
                        "in": "path",
                        "description": "Menu ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Menu"
                ],
                "summary": "Update admin panel menu.",
                "description": "Update admin panel sidebar menu.",
                "operationId": "menuUpdate",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "roles"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Users"
                                    },
                                    "link": {
                                        "description": "Required to create a child menu",
                                        "type": "string",
                                        "format": "string",
                                        "example": "/user/users"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "mdi-users"
                                    },
                                    "parent_id": {
                                        "description": "Required to create a child menu",
                                        "type": "integer",
                                        "format": "int64",
                                        "example": "1"
                                    },
                                    "status": {
                                        "description": "check, if menu is active or inactive",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "1"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/menu-reorder": {
            "post": {
                "tags": [
                    "Menu"
                ],
                "summary": "Reorder admin panel menu.",
                "description": "Reorder admin panel sidebar menu.",
                "operationId": "menuReorder",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "menus"
                                ],
                                "properties": {
                                    "menus": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "1"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/menus": {
            "get": {
                "tags": [
                    "Menu"
                ],
                "summary": "Get sidebar menu assoicate to auth user.",
                "description": "Get admin panel menu assoicate to auth user.",
                "operationId": "menus",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SidebarMenuResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/live-media": {
            "get": {
                "tags": [
                    "LiveMedia"
                ],
                "summary": "Get live media",
                "description": "Get live media with paginate",
                "operationId": "liveMediaIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LiveMedia"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "LiveMedia"
                ],
                "summary": "Store live media",
                "description": "Store live media",
                "operationId": "liveMediaStore",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveMedia"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "liveMediaId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/live-media/{id}": {
            "get": {
                "tags": [
                    "LiveMedia"
                ],
                "summary": "Get live media",
                "description": "Get live media",
                "operationId": "liveMediaShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LiveMedia"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "LiveMedia"
                ],
                "summary": "Delete live media",
                "description": "Delete live media",
                "operationId": "liveMediaDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "LiveMedia"
                ],
                "summary": "Update live media",
                "description": "Update live media",
                "operationId": "liveMediaUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LiveMedia"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get category",
                "description": "Get category list",
                "operationId": "categoryIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Store category",
                "description": "Create category",
                "operationId": "categoryStore",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "categoryId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get categories",
                "description": "Get category all",
                "operationId": "categoryAll",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SelectResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get single category",
                "description": "Get category",
                "operationId": "categoryShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete category",
                "description": "Delete category",
                "operationId": "categoryDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Category"
                ],
                "summary": "Update category",
                "description": "Update category",
                "operationId": "categoryUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/category-slug/{title}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Check unique slug",
                "description": "Check unique slug for model",
                "operationId": "categorySlug",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Model title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "slug": {
                                            "type": "string",
                                            "example": "this-is-slug"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/categories-tree": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get categories as tree",
                "description": "Get category all as tree",
                "operationId": "categoryAllTree",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CategoryTreeResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/category-reorder": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Reorder categories.",
                "description": "Reorder categories.",
                "operationId": "categoryReorder",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "categories"
                                ],
                                "properties": {
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": "1"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/latest-post": {
            "get": {
                "tags": [
                    "LatestPost"
                ],
                "summary": "Get Latest Post",
                "description": "Get Latest Post list",
                "operationId": "latestPostIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LatestPost"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "LatestPost"
                ],
                "summary": "Store Latest Post",
                "description": "Create Latest Post",
                "operationId": "latestPostStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LatestPost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/latest-post-all": {
            "get": {
                "tags": [
                    "LatestPost"
                ],
                "summary": "Get all Latest Post",
                "description": "Get Latest Post list",
                "operationId": "latestPostAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LatestPost"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/latest-post/{id}": {
            "get": {
                "tags": [
                    "LatestPost"
                ],
                "summary": "Get single Latest Post",
                "description": "Get Latest Post",
                "operationId": "latestPostShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/LatestPost"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "LatestPost"
                ],
                "summary": "Delete Latest Post",
                "description": "Delete Latest Post",
                "operationId": "latestPostDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "LatestPost"
                ],
                "summary": "Update Latest Post",
                "description": "Update Latest Post",
                "operationId": "latestPostUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LatestPost"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/opedpost": {
            "get": {
                "tags": [
                    "OpedPost"
                ],
                "summary": "Get opedpost",
                "description": "Get opedpost list",
                "operationId": "opedpostIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Type"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "OpedPost"
                ],
                "summary": "Store opedpost",
                "description": "Create opedpost",
                "operationId": "opedpostStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "post_id",
                                    "category_id"
                                ],
                                "properties": {
                                    "post_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/opedpost/{id}": {
            "get": {
                "tags": [
                    "OpedPost"
                ],
                "summary": "Get single opedpost",
                "description": "Get opedpost",
                "operationId": "opedpostShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Type"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OpedPost"
                ],
                "summary": "Delete opedpost",
                "description": "Delete opedpost",
                "operationId": "opedpostDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OpedPost"
                ],
                "summary": "Update opedpost",
                "description": "Update opedpost",
                "operationId": "opedpostUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "post_id",
                                    "category_id"
                                ],
                                "properties": {
                                    "post_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/post": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get post",
                "description": "Get post list",
                "operationId": "postIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Store post",
                "description": "Create post",
                "operationId": "postStore",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "postId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/post/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get single post",
                "description": "Get post",
                "operationId": "postShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete post",
                "description": "Delete post",
                "operationId": "postDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Post"
                ],
                "summary": "Update post",
                "description": "Update post",
                "operationId": "postUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/post-slug/{title}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Check unique slug",
                "description": "Check unique slug for model",
                "operationId": "postSlug",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Model title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "slug": {
                                            "type": "string",
                                            "example": "this-is-slug"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/tag": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get tag",
                "description": "Get tag list",
                "operationId": "tagIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Tag"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tag"
                ],
                "summary": "Store tag",
                "description": "Create tag",
                "operationId": "tagStore",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "tagId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/tags": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get tags",
                "description": "Get tag all",
                "operationId": "tagAll",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SelectResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/tag/{id}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Get single tag",
                "description": "Get tag",
                "operationId": "tagShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Tag"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tag"
                ],
                "summary": "Delete tag",
                "description": "Delete tag",
                "operationId": "tagDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Tag"
                ],
                "summary": "Update tag",
                "description": "Update tag",
                "operationId": "tagUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/tag-slug/{title}": {
            "get": {
                "tags": [
                    "Tag"
                ],
                "summary": "Check unique slug",
                "description": "Check unique slug for model",
                "operationId": "tagSlug",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "title",
                        "in": "path",
                        "description": "Model title",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "slug": {
                                            "type": "string",
                                            "example": "this-is-slug"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/type": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "Get type",
                "description": "Get type list",
                "operationId": "typeIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Type"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Type"
                ],
                "summary": "Store type",
                "description": "Create type",
                "operationId": "typeStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "key",
                                    "label"
                                ],
                                "properties": {
                                    "key": {
                                        "type": "string",
                                        "example": "top-left"
                                    },
                                    "label": {
                                        "type": "string",
                                        "example": "Top Left"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/type-all": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "Get all type",
                "description": "Get type list",
                "operationId": "typeAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Type"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/type/{id}": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "Get single type",
                "description": "Get type",
                "operationId": "typeShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Type"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Type"
                ],
                "summary": "Delete type",
                "description": "Delete type",
                "operationId": "typeDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Type"
                ],
                "summary": "Update type",
                "description": "Update type",
                "operationId": "typeUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "key",
                                    "label"
                                ],
                                "properties": {
                                    "key": {
                                        "type": "string",
                                        "example": "top-left"
                                    },
                                    "label": {
                                        "type": "string",
                                        "example": "Top Left"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/slider": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "Get slider",
                "description": "Get slider list",
                "operationId": "sliderIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Slider"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Slider"
                ],
                "summary": "Store slider",
                "description": "Create slider",
                "operationId": "sliderStore",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Slider"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "sliderId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/slider/{id}": {
            "get": {
                "tags": [
                    "Slider"
                ],
                "summary": "Get single slider",
                "description": "Get slider",
                "operationId": "sliderShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Slider"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Slider"
                ],
                "summary": "Delete slider",
                "description": "Delete slider",
                "operationId": "sliderDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Slider"
                ],
                "summary": "Update slider",
                "description": "Update slider",
                "operationId": "sliderUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Slider"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Generate Token to use API docs",
                "operationId": "authToken",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "description": "Get loggedIn user",
                "operationId": "authMe",
                "responses": {
                    "200": {
                        "description": "Authentication response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": "#/components/schemas/AuthResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Logout and desctory session",
                "operationId": "authLogout",
                "responses": {
                    "200": {
                        "description": "Successfully Logged Out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully Logged Out!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/logout-by-token": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Logout and delete token",
                "operationId": "authLogoutByToken",
                "responses": {
                    "200": {
                        "description": "Successfully Logged Out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully Logged Out!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Forgot password request",
                "operationId": "authForgotPassword",
                "requestBody": {
                    "description": "Please enter email address",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Reset password request",
                "operationId": "authResetPassword",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confimation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "1231231232321kjkljkljklk"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/email/verify/{id}/{hash}": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Verify email address",
                "operationId": "authVerifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash value",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "12345asdfg"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/email/resend/{email}": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "description": "Resend verification email",
                "operationId": "authResendVerifyEmail",
                "parameters": [
                    {
                        "name": "email",
                        "in": "path",
                        "description": "Email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        },
                        "example": "user@example.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/{locale}/reporter": {
            "get": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Get reporter",
                "description": "Get reporter list",
                "operationId": "reporterIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Reporter"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Store reporter",
                "description": "Create reporter",
                "operationId": "reporterStore",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Reporter"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "reporterId": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/reporters": {
            "get": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Get reporters",
                "description": "Get reporter all",
                "operationId": "reporterAll",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SelectResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/reporter/{id}": {
            "get": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Get single reporter",
                "description": "Get reporter",
                "operationId": "reporterShow",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Reporter"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Delete reporter",
                "description": "Delete reporter",
                "operationId": "reporterDelete",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Update reporter",
                "description": "Update reporter",
                "operationId": "reporterUpdate",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Reporter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/{locale}/reporter-username/{name}": {
            "get": {
                "tags": [
                    "Reporter"
                ],
                "summary": "Check unique username",
                "description": "Check unique username for model",
                "operationId": "reporterSlug",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/locale"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Model name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "username": {
                                            "type": "string",
                                            "example": "this-is-username"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/permission": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get permissions as tree.",
                "description": "Get permissions as tree.",
                "operationId": "rolePermissionTree",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "1": {
                                                    "type": "string",
                                                    "format": "string",
                                                    "example": "view user"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/role-all": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get roles.",
                "description": "Get roles.",
                "operationId": "roleAll",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "format": "string",
                                                        "example": "editor"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "description": "Get role list",
                "operationId": "roleIndex",
                "parameters": [
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Sort by",
                        "schema": {
                            "type": "string"
                        },
                        "example": "name"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "description": "Create new role",
                "operationId": "roleStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "editor"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "string",
                                            "example": "view user"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/role/{role}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get role for edit",
                "description": "Get role",
                "operationId": "roleEdit",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RoleEditResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete role",
                "description": "Delete role",
                "operationId": "roleDelete",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Role"
                ],
                "summary": "Update role",
                "description": "Update role",
                "operationId": "roleUpdate",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "editor"
                                    },
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "string",
                                            "example": "view user"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/add-permission/{role}": {
            "patch": {
                "tags": [
                    "Role"
                ],
                "summary": "Add permissions to associate role",
                "description": "Add permissions to associate role",
                "operationId": "roleUpdatePermission",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "string",
                                            "example": "view user"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/permission/{role}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get permissions by role.",
                "description": "Get permissions by role.",
                "operationId": "rolePermission",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "Role ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "format": "int64"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get user list",
                "operationId": "userIndex",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Search query",
                        "schema": {
                            "type": "string"
                        },
                        "example": "john"
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "Sort by",
                        "schema": {
                            "type": "string"
                        },
                        "example": "name"
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Sort direction",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "example": "asc"
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "10"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Create new user",
                "operationId": "userStore",
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "status",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "+8801000000000"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "PassWord12345"
                                    },
                                    "role": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "editor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/{user}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get user",
                "operationId": "userShow",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserEditResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Delete user",
                "operationId": "userDelete",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "description": "Update user",
                "operationId": "userUpdate",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "status",
                                    "role"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "+8801000000000"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "PassWord12345"
                                    },
                                    "role": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "editor"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user/{user}/edit": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Get user",
                "operationId": "userEdit",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserEditResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/update-user-info/{user}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Update user information",
                "operationId": "userUpdateInfo",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "+8801000000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserSingleResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/update-user-password/{user}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Update user password",
                "operationId": "userUpdatePassword",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "description": "Please enter valid information",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserSingleResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/update-user-avatar/{user}": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Update user avatar",
                "operationId": "userUpdateAvatar",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "avatar"
                                ],
                                "properties": {
                                    "avatar": {
                                        "description": "Binary content of file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/UserSingleResponse"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Please sign in to use this service."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not Found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something weng wrong, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user-logs": {
            "get": {
                "tags": [
                    "UserLog"
                ],
                "summary": "Get user login logs",
                "description": "Get user login logs",
                "operationId": "userLogIndex",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/query"
                    },
                    {
                        "$ref": "#/components/parameters/sortBy"
                    },
                    {
                        "$ref": "#/components/parameters/direction"
                    },
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserLogResponse"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UserLog"
                ],
                "summary": "Delete all user login logs",
                "description": "Delete all user login logs",
                "operationId": "userLogDestroyAll",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Log ids",
                        "schema": {
                            "type": "string"
                        },
                        "example": "1, 2, 3"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/user-logs/{id}": {
            "delete": {
                "tags": [
                    "UserLog"
                ],
                "summary": "Delete user login logs",
                "description": "Delete user login logs",
                "operationId": "userLogDestroy",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/id"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/200"
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "403": {
                        "$ref": "#/components/responses/403"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/500"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Advertisement": {
                "title": "Advertisement",
                "description": "Advertisement model",
                "required": [
                    "title",
                    "status",
                    "type",
                    "start_date",
                    "end_date",
                    "provider_id",
                    "position_id"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Advertisement ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "provider_id": {
                        "title": "provider_id",
                        "description": "Ads provider ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "position_id": {
                        "title": "position_id",
                        "description": "Ads position ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean"
                    },
                    "title": {
                        "title": "title",
                        "description": "Advertisement title",
                        "type": "string",
                        "format": "string"
                    },
                    "type": {
                        "title": "type",
                        "description": "Advertisement type",
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "image",
                            "video",
                            "iframe",
                            "document"
                        ],
                        "example": "image"
                    },
                    "content": {
                        "title": "content",
                        "description": "Advertisement Iframe script",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "Advertisement image",
                        "type": "string",
                        "format": "binary"
                    },
                    "video": {
                        "title": "video",
                        "description": "Advertisement video",
                        "type": "string",
                        "format": "binary"
                    },
                    "document": {
                        "title": "document",
                        "description": "Advertisement document",
                        "type": "string",
                        "format": "binary"
                    },
                    "link": {
                        "title": "link",
                        "description": "Advertisement link",
                        "type": "string",
                        "format": "string"
                    },
                    "mobile_content": {
                        "title": "mobile_content",
                        "description": "Advertisement mobile Iframe script",
                        "type": "string",
                        "format": "string"
                    },
                    "mobile_image": {
                        "title": "mobile_image",
                        "description": "Advertisement mobile image",
                        "type": "string",
                        "format": "binary"
                    },
                    "mobile_video": {
                        "title": "mobile_video",
                        "description": "Advertisement mobile video",
                        "type": "string",
                        "format": "binary"
                    },
                    "mobile_document": {
                        "title": "mobile_document",
                        "description": "Advertisement mobile document",
                        "type": "string",
                        "format": "binary"
                    },
                    "mobile_link": {
                        "title": "mobile_link",
                        "description": "Advertisement mobile link",
                        "type": "string",
                        "format": "string"
                    },
                    "start_date": {
                        "title": "start_date",
                        "description": "Start datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "title": "end_date",
                        "description": "End datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_external": {
                        "title": "is_external",
                        "description": "External link",
                        "type": "boolean"
                    },
                    "is_modal": {
                        "title": "is_modal",
                        "description": "Popup ads",
                        "type": "boolean"
                    },
                    "is_auto_modal": {
                        "title": "is_auto_modal",
                        "description": "Auto popup ads",
                        "type": "boolean"
                    },
                    "auto_modal_duration": {
                        "title": "auto_modal_duration",
                        "description": "Auto popup duration",
                        "type": "int"
                    }
                },
                "type": "object"
            },
            "AuthResponse": {
                "title": "AuthResponse",
                "description": "Authentication response",
                "properties": {
                    "id": {
                        "title": "User ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "User name",
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User email",
                        "type": "string",
                        "format": "email"
                    },
                    "mobile": {
                        "title": "Mobile",
                        "description": "User mobile",
                        "type": "string",
                        "format": "string"
                    },
                    "avatar": {
                        "title": "Avatar",
                        "description": "User avatar",
                        "type": "string",
                        "format": "string"
                    },
                    "role": {
                        "title": "Role",
                        "description": "User role",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "BaseModel": {
                "title": "BaseModel",
                "description": "Base model",
                "properties": {
                    "created_at": {
                        "title": "created_at",
                        "description": "Initial creation timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "Last update timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    },
                    "deleted_at": {
                        "title": "deleted_at",
                        "description": "Soft delete timestamp",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": "true"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "description": "Category model",
                "required": [
                    "name",
                    "slug",
                    "status",
                    "ordering"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Category slug",
                        "type": "string",
                        "format": "string"
                    },
                    "color": {
                        "title": "color",
                        "description": "Category color",
                        "type": "string",
                        "format": "string"
                    },
                    "ordering": {
                        "title": "ordering",
                        "description": "Order number",
                        "type": "integer",
                        "format": "int64"
                    },
                    "parent_id": {
                        "title": "parent_id",
                        "description": "Parent ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "meta_title": {
                        "title": "meta_title",
                        "description": "Category meta title",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_description": {
                        "title": "meta_description",
                        "description": "Category meta description",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_image": {
                        "title": "meta_image",
                        "description": "Category meta image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "CategoryChildResponse": {
                "title": "CategoryChildResponse",
                "description": "Category children response",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Category slug",
                        "type": "string",
                        "format": "string"
                    },
                    "color": {
                        "title": "color",
                        "description": "Category color",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "CategoryCommonApi": {
                "title": "CategoryCommonApi",
                "description": "Category common response for API",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Category slug",
                        "type": "string",
                        "format": "string"
                    },
                    "color": {
                        "title": "color",
                        "description": "Category color",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "CategoryResponse": {
                "title": "CategoryResponse",
                "description": "Category list response",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Category slug",
                        "type": "string",
                        "format": "string"
                    },
                    "color": {
                        "title": "color",
                        "description": "Category color",
                        "type": "string",
                        "format": "string"
                    },
                    "posts_count": {
                        "title": "posts_count",
                        "description": "Category posts count",
                        "type": "integer",
                        "format": "int64"
                    },
                    "children": {
                        "title": "Children",
                        "description": "children",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryChildResponse"
                        }
                    }
                },
                "type": "object"
            },
            "CategoryTreeResponse": {
                "title": "CategoryResponse",
                "description": "Category list response",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    },
                    "children": {
                        "title": "Children",
                        "description": "children",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectResponse"
                        }
                    }
                },
                "type": "object"
            },
            "FilterResponse": {
                "title": "FilterResponse",
                "description": "Filter option response",
                "properties": {
                    "value": {
                        "title": "Value",
                        "description": "Filter value",
                        "type": "integer",
                        "format": "int64"
                    },
                    "text": {
                        "title": "Text",
                        "description": "Filter text",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "LatestPost": {
                "title": "LatestPost",
                "description": "Latest Post model",
                "required": [
                    "title",
                    "status"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Latest Post ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean"
                    },
                    "title": {
                        "title": "title",
                        "description": "Latest Post title",
                        "type": "string",
                        "format": "string"
                    },
                    "url": {
                        "title": "url",
                        "description": "Latest Post url",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "LatestPostApi": {
                "title": "LatestPostApi",
                "description": "Latest Post model",
                "required": [
                    "title",
                    "status"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Latest Post ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "title": {
                        "title": "title",
                        "description": "Latest Post title",
                        "type": "string",
                        "format": "string"
                    },
                    "url": {
                        "title": "url",
                        "description": "Latest Post url",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "LiveMedia": {
                "title": "LiveMedia",
                "description": "Live media model",
                "required": [
                    "title",
                    "status",
                    "image",
                    "content",
                    "start_at",
                    "end_at"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Live media ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean"
                    },
                    "featured": {
                        "title": "featured",
                        "description": "Featured model",
                        "type": "boolean"
                    },
                    "title": {
                        "title": "title",
                        "description": "Live media title",
                        "type": "string",
                        "format": "string"
                    },
                    "subtitle": {
                        "title": "title",
                        "description": "Live media subtitle",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "Live media image for thumbnail",
                        "type": "string",
                        "format": "binary"
                    },
                    "content": {
                        "title": "content",
                        "description": "Live media Iframe script",
                        "type": "string",
                        "format": "string"
                    },
                    "start_at": {
                        "title": "start_at",
                        "description": "Start datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_at": {
                        "title": "end_at",
                        "description": "End datetime",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "LiveMediaApi": {
                "title": "LiveMediaApi",
                "description": "Live media model",
                "required": [
                    "title",
                    "status",
                    "image",
                    "content",
                    "start_at",
                    "end_at"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Live media ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "title": {
                        "title": "title",
                        "description": "Live media title",
                        "type": "string",
                        "format": "string"
                    },
                    "subtitle": {
                        "title": "title",
                        "description": "Live media subtitle",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "Live media image for thumbnail",
                        "type": "string",
                        "format": "binary"
                    },
                    "content": {
                        "title": "content",
                        "description": "Live media Iframe script",
                        "type": "string",
                        "format": "string"
                    },
                    "startAt": {
                        "title": "startAt",
                        "description": "Start datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "endAt": {
                        "title": "endAt",
                        "description": "End datetime",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "MenuResponse": {
                "title": "MenuResponse",
                "description": "Menu list response",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "id": {
                                "title": "User ID",
                                "description": "ID",
                                "type": "integer",
                                "format": "int64"
                            },
                            "title": {
                                "title": "Title",
                                "description": "Menu title",
                                "type": "string",
                                "format": "string"
                            },
                            "link": {
                                "title": "Link",
                                "description": "Menu link",
                                "type": "string",
                                "format": "string"
                            },
                            "icon": {
                                "title": "Icon",
                                "description": "Menu icon",
                                "type": "string",
                                "format": "string"
                            },
                            "roles": {
                                "title": "Roles",
                                "description": "roles",
                                "type": "array",
                                "items": {
                                    "type": "integer",
                                    "format": "int64",
                                    "example": "1"
                                }
                            },
                            "children": {
                                "title": "Children",
                                "description": "children",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/MenuResponse"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Post": {
                "title": "Post",
                "description": "Post model",
                "required": [
                    "title",
                    "short_title",
                    "slug",
                    "type",
                    "status",
                    "image",
                    "excerpt",
                    "content",
                    "datetime"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Post ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean",
                        "example": true
                    },
                    "category_id": {
                        "title": "category_id",
                        "description": "Post category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "reporter_id": {
                        "title": "reporter_id",
                        "description": "Post reporter ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "title": "type",
                        "description": "Post type",
                        "type": "string",
                        "format": "string"
                    },
                    "title": {
                        "title": "title",
                        "description": "Post title",
                        "type": "string",
                        "format": "string"
                    },
                    "short_title": {
                        "title": "short_title",
                        "description": "Post short_title",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Post slug",
                        "type": "string",
                        "format": "string"
                    },
                    "shoulder": {
                        "title": "shoulder",
                        "description": "Post shoulder",
                        "type": "string",
                        "format": "string"
                    },
                    "hanger": {
                        "title": "hanger",
                        "description": "Post hanger",
                        "type": "string",
                        "format": "string"
                    },
                    "excerpt": {
                        "title": "excerpt",
                        "description": "Post excerpt",
                        "type": "string",
                        "format": "string"
                    },
                    "content": {
                        "title": "content",
                        "description": "Post content",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "Post image",
                        "type": "string",
                        "format": "binary"
                    },
                    "caption": {
                        "title": "caption",
                        "description": "Post image caption",
                        "type": "string",
                        "format": "string"
                    },
                    "is_fb_article": {
                        "title": "is_fb_article",
                        "description": "Facebook instant article",
                        "type": "boolean",
                        "format": "int64"
                    },
                    "datetime": {
                        "title": "datetime",
                        "description": "Post datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "meta_title": {
                        "title": "meta_title",
                        "description": "Post meta title",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_description": {
                        "title": "meta_description",
                        "description": "Post meta description",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_image": {
                        "title": "meta_image",
                        "description": "Post meta image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "PostApi": {
                "title": "PostApi",
                "description": "PostResponse model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Post ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "title": {
                        "title": "title",
                        "description": "Post title",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Post slug",
                        "type": "string",
                        "format": "string"
                    },
                    "excerpt": {
                        "title": "excerpt",
                        "description": "Post excerpt",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "Post image",
                        "type": "string",
                        "format": "binary"
                    },
                    "caption": {
                        "title": "caption",
                        "description": "Post image caption",
                        "type": "string",
                        "format": "string"
                    },
                    "datetime": {
                        "title": "datetime",
                        "description": "Post datetime",
                        "type": "string",
                        "format": "date-time"
                    },
                    "category": {
                        "$ref": "#/components/schemas/CategoryCommonApi"
                    }
                },
                "type": "object"
            },
            "Reporter": {
                "title": "Reporter",
                "description": "Reporter model",
                "required": [
                    "name",
                    "username",
                    "status"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Repoter ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean",
                        "example": true
                    },
                    "name": {
                        "title": "name",
                        "description": "Repoter name",
                        "type": "string",
                        "format": "string"
                    },
                    "username": {
                        "title": "username",
                        "description": "Reporter username",
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "title": "email",
                        "description": "Repoter email",
                        "type": "string",
                        "format": "email"
                    },
                    "mobile": {
                        "title": "mobile",
                        "description": "Repoter mobile",
                        "type": "string",
                        "format": "string"
                    },
                    "avatar": {
                        "title": "avatar",
                        "description": "Repoter avatar",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "id": {
                                "title": "User ID",
                                "description": "ID",
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "title": "Name",
                                "description": "User name",
                                "type": "string",
                                "format": "string"
                            },
                            "users_count": {
                                "title": "UsersCount",
                                "description": "Users count",
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "RoleEditResponse": {
                "title": "RoleEditResponse",
                "description": "Role edit response",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "id": {
                                "title": "User ID",
                                "description": "ID",
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "title": "Name",
                                "description": "User name",
                                "type": "string",
                                "format": "string"
                            },
                            "permissions": {
                                "title": "Permission",
                                "description": "permissions",
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "string",
                                    "example": "view user"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SelectResponse": {
                "title": "SelectResponse",
                "description": "Select box response",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "SidebarChildMenuResponse": {
                "title": "SidebarChildMenuResponse",
                "description": "Sidebar child menu list response",
                "properties": {
                    "id": {
                        "title": "User ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Menu title",
                        "type": "string",
                        "format": "string"
                    },
                    "link": {
                        "title": "Link",
                        "description": "Menu link",
                        "type": "string",
                        "format": "string"
                    },
                    "icon": {
                        "title": "Icon",
                        "description": "Menu icon",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "SidebarMenuResponse": {
                "title": "SidebarMenuResponse",
                "description": "Sidebar menu list response",
                "properties": {
                    "id": {
                        "title": "User ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "title": "Title",
                        "description": "Menu title",
                        "type": "string",
                        "format": "string"
                    },
                    "link": {
                        "title": "Link",
                        "description": "Menu link",
                        "type": "string",
                        "format": "string"
                    },
                    "icon": {
                        "title": "Icon",
                        "description": "Menu icon",
                        "type": "string",
                        "format": "string"
                    },
                    "children": {
                        "title": "Children",
                        "description": "children",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SidebarChildMenuResponse"
                        }
                    }
                },
                "type": "object"
            },
            "Slider": {
                "title": "SliderResponse",
                "description": "SliderResponse model",
                "required": [
                    "title",
                    "status"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "SliderResponse ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean",
                        "format": "int64",
                        "example": "1"
                    },
                    "type": {
                        "title": "type",
                        "description": "SliderResponse type",
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "image",
                            "video",
                            "iframe"
                        ],
                        "example": "iframe"
                    },
                    "title": {
                        "title": "title",
                        "description": "SliderResponse title",
                        "type": "string",
                        "format": "string"
                    },
                    "content": {
                        "title": "content",
                        "description": "SliderResponse iframe content",
                        "type": "string",
                        "format": "string"
                    },
                    "image": {
                        "title": "image",
                        "description": "SliderResponse image",
                        "type": "string",
                        "format": "binary"
                    },
                    "video": {
                        "title": "video",
                        "description": "SliderResponse video",
                        "type": "string",
                        "format": "binary"
                    },
                    "link": {
                        "title": "link",
                        "description": "SliderResponse link",
                        "type": "string",
                        "format": "string"
                    },
                    "ordering": {
                        "title": "ordering",
                        "description": "Order number",
                        "type": "integer",
                        "format": "int64"
                    },
                    "is_external": {
                        "title": "is_external",
                        "description": "External link",
                        "type": "boolean",
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "SliderApi": {
                "title": "SliderApi",
                "description": "SliderResponse model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "SliderResponse ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "type": {
                        "title": "type",
                        "description": "SliderResponse type",
                        "type": "string",
                        "format": "string",
                        "enum": [
                            "image",
                            "video",
                            "iframe"
                        ],
                        "example": "image"
                    },
                    "title": {
                        "title": "title",
                        "description": "SliderResponse title",
                        "type": "string",
                        "format": "string"
                    },
                    "content": {
                        "title": "content",
                        "description": "SliderResponse image, video link or iframe script",
                        "type": "string",
                        "format": "string"
                    },
                    "link": {
                        "title": "link",
                        "description": "SliderResponse link",
                        "type": "string",
                        "format": "string"
                    },
                    "isExternal": {
                        "title": "isExternal",
                        "description": "External link",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "title": "Tag",
                "description": "Tag model",
                "required": [
                    "name",
                    "slug",
                    "status"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "title": "status",
                        "description": "Check, if resource active or inactive",
                        "type": "boolean",
                        "format": "int64"
                    },
                    "name": {
                        "title": "name",
                        "description": "Category name",
                        "type": "string",
                        "format": "string"
                    },
                    "slug": {
                        "title": "slug",
                        "description": "Category slug",
                        "type": "string",
                        "format": "string"
                    },
                    "color": {
                        "title": "color",
                        "description": "Category color",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_title": {
                        "title": "meta_title",
                        "description": "Category meta title",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_description": {
                        "title": "meta_description",
                        "description": "Category meta description",
                        "type": "string",
                        "format": "string"
                    },
                    "meta_image": {
                        "title": "meta_image",
                        "description": "Category meta image",
                        "type": "string",
                        "format": "binary"
                    }
                },
                "type": "object"
            },
            "Type": {
                "title": "Type",
                "description": "Type model",
                "required": [
                    "key",
                    "label"
                ],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Category ID",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "key": {
                        "title": "key",
                        "description": "Type key",
                        "type": "string",
                        "format": "string"
                    },
                    "label": {
                        "title": "label",
                        "description": "Type label",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "id": {
                                "title": "User ID",
                                "description": "ID",
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "title": "Name",
                                "description": "User name",
                                "type": "string",
                                "format": "string"
                            },
                            "email": {
                                "title": "Email",
                                "description": "User email",
                                "type": "string",
                                "format": "email"
                            },
                            "mobile": {
                                "title": "Mobile",
                                "description": "User mobile",
                                "type": "string",
                                "format": "string"
                            },
                            "status": {
                                "title": "Status",
                                "description": "User status",
                                "type": "boolean"
                            },
                            "avatar": {
                                "title": "Avatar",
                                "description": "User avatar",
                                "type": "string",
                                "format": "string"
                            },
                            "role": {
                                "title": "Role",
                                "description": "User role",
                                "type": "string",
                                "format": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UserEditResponse": {
                "title": "UserEditResponse",
                "description": "User edit response",
                "properties": {
                    "id": {
                        "title": "User ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "User name",
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User email",
                        "type": "string",
                        "format": "email"
                    },
                    "mobile": {
                        "title": "Mobile",
                        "description": "User mobile",
                        "type": "string",
                        "format": "string"
                    },
                    "avatar": {
                        "title": "Avatar",
                        "description": "User avatar",
                        "type": "string",
                        "format": "string"
                    },
                    "status": {
                        "title": "Status",
                        "description": "User status",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserLogResponse": {
                "title": "UserLogResponse",
                "description": "User log response",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseModel"
                    },
                    {
                        "properties": {
                            "id": {
                                "title": "id",
                                "description": "User ID",
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "title": "name",
                                "description": "User name",
                                "type": "string",
                                "format": "string"
                            },
                            "email": {
                                "title": "email",
                                "description": "User email",
                                "type": "string",
                                "format": "email"
                            },
                            "date": {
                                "title": "date",
                                "description": "Log date",
                                "type": "string",
                                "format": "date"
                            },
                            "user_id": {
                                "title": "user_id",
                                "description": "User id",
                                "type": "integer",
                                "format": "int64"
                            },
                            "login_status": {
                                "title": "login_status",
                                "description": "Log status",
                                "type": "string",
                                "format": "string"
                            },
                            "last_login": {
                                "title": "last_login",
                                "description": "Log last login",
                                "type": "string",
                                "format": "date-time"
                            },
                            "last_logout": {
                                "title": "last_logout",
                                "description": "Log last logout",
                                "type": "string",
                                "format": "date-time"
                            },
                            "browser": {
                                "title": "browser",
                                "description": "User browser",
                                "type": "string",
                                "format": "string"
                            },
                            "os": {
                                "title": "os",
                                "description": "User operating system",
                                "type": "string",
                                "format": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UserSingleResponse": {
                "title": "UserSingleResponse",
                "description": "User single response",
                "properties": {
                    "id": {
                        "title": "User ID",
                        "description": "ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "title": "Name",
                        "description": "User name",
                        "type": "string",
                        "format": "string"
                    },
                    "email": {
                        "title": "Email",
                        "description": "User email",
                        "type": "string",
                        "format": "email"
                    },
                    "mobile": {
                        "title": "Mobile",
                        "description": "User mobile",
                        "type": "string",
                        "format": "string"
                    },
                    "avatar": {
                        "title": "Avatar",
                        "description": "User avatar",
                        "type": "string",
                        "format": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "200": {
                "description": "Success",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Success"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something weng wrong, please try again later."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Please sign in to use this service."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "This action is unauthorized."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Not Found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Resource Not Found."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "500": {
                "description": "Internal Server Error",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Internal Server Error."
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "locale": {
                "name": "locale",
                "in": "path",
                "description": "App locale",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "example": "en"
            },
            "id": {
                "name": "id",
                "in": "path",
                "description": "Model ID",
                "required": true,
                "schema": {
                    "type": "integer",
                    "format": "int64"
                },
                "example": "1"
            },
            "query": {
                "name": "query",
                "in": "query",
                "description": "Search term",
                "schema": {
                    "type": "string"
                }
            },
            "page": {
                "name": "page",
                "in": "query",
                "description": "Page number",
                "schema": {
                    "type": "integer",
                    "format": "int64"
                },
                "example": "1"
            },
            "sortBy": {
                "name": "sortBy",
                "in": "query",
                "description": "Sort by",
                "schema": {
                    "type": "string"
                }
            },
            "direction": {
                "name": "direction",
                "in": "query",
                "description": "Sort direction",
                "schema": {
                    "type": "string",
                    "enum": [
                        "asc",
                        "desc"
                    ]
                },
                "example": "asc"
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "description": "Items per page",
                "schema": {
                    "type": "integer",
                    "format": "int64"
                },
                "example": "10"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Laravel Sanctum token authentication",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        []
    ]
}